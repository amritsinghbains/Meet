var express = require('express');
var http = require('http');
var url = require('url');
var bodyParser = require('body-parser');
var app = express();
var mysql = require('mysql');

app.use(bodyParser.urlencoded({extended:true}));
app.use(bodyParser.json());

app.all('*', function(req, res, next) {
  res.header('Access-Control-Allow-Origin', '*');
  res.header('Access-Control-Allow-Headers', 'X-Requested-With, Authorization, Content-Type');
  next();
});

app.listen(6006);
console.log('Listening at 6006');
DATABASE_HOST = 'localhost';
DATABASE_NAME = 'meet';
DATABASE_USERNAME = 'root';
DATABASE_PASSWORD = 'Hello123';

var connectionNode = mysql.createConnection({
    host: DATABASE_HOST,
    user: DATABASE_USERNAME,
    password: DATABASE_PASSWORD,
    database: DATABASE_NAME
});

app.post('/addUser', function (req, res) {        
    connectionNode.query('replace into meet.user(uuid, latitude, longitude, source, group_uuid, timestamp) values(?,?,?,?,?,CURRENT_TIMESTAMP);',
        [req.body.uuid, req.body.latitude, req.body.longitude, req.body.source, req.body.group_uuid], function (err, rows, fields) {
        if (err) {
            console.log(err);
            res.json('error');
        } else {
            console.log(rows);
            res.json('added');
        }
    });
});

var that = this;
app.post('/hostLocation', function (req, res) {
    var randomNumerForAnimal = Math.floor((Math.random() * 25));
    // console.log(randomNumerForAnimal);
    var randomNumerForAdj = Math.floor((Math.random() * that[animalsArray[randomNumerForAnimal].charAt(0)].length));
    var base = that[animalsArray[randomNumerForAnimal].charAt(0)][randomNumerForAdj]+animalsArray[randomNumerForAnimal];
    connectionNode.query('SELECT count(*) as id FROM meet.group where base like ?;',
        [base], function (err, rows, fields) {
        if (err) {
            console.log(err);
            res.json('error');
        } else {
            var id = rows[0].id+1;
            // console.log(id);
            var uuid = base+id;
            connectionNode.query('replace into meet.group(uuid, latitude, longitude, base) values(?,0,0,?);',
                [uuid, base], function (err, rows, fields) {
                if (err) {
                    console.log(err);
                    res.json('error2');
                }else{
                    console.log(uuid, 'updated');
                    res.json(uuid);
                }
            });
        }
    });
});   

app.post('/getUsersInLocation', function (req, res) {
    console.log(req.body.group_uuid)
    connectionNode.query('SELECT user.uuid, user.latitude, user.longitude, user.timestamp FROM meet.user INNER JOIN meet.group where user.group_uuid = group.uuid and group_uuid like ? and user.uuid not like ?;',
        [req.body.group_uuid, req.body.uuid], function (err, rows, fields) {
        if (err) {
            console.log(err);
            res.json('error');
        } else {
            console.log(rows);
            res.json(rows);
        }
    });
});



















var animalsArray = ['ant',
'bull',
'cat',
'dog',
'eagle',
'fish',
'goat',
'hare',
'insect',
'jackal',
'kiwi',
'lion',
'mouse',
'numbat',
'ostrich',
'parrot',
'quoll',
'rat',
'seal',
'tiger',
'ullu',
'vulture',
'walrus',
'yak',
'zebra',
];

this.a = [
'able',
'aching',
'acidic',
'active',
'actual',
'adept',
'admirable',
'admired',
'adolescent',
'adorable',
'adored',
'advanced',
'afraid',
'aged',
'agile',
'agitated',
'ajar',
'alarmed',
'alarming',
'alert',
'alienated',
'alive',
'all',
'amazing',
'ambitious',
'ample',
'amused',
'amusing',
'anchored',
'ancient',
'angelic',
'angry',
'animated',
'annual',
'another',
'antique',
'anxious',
'any',
'apt',
'arctic',
'arid',
'assured',
'austere',
'average',
'aware',
'awesome',
'awful',
'awkward'
];

this.b = [
'bad',
'back',
'baggy',
'bare',
'barren',
'basic',
'beautiful',
'belated',
'beloved',
'better',
'best',
'big',
'bitter',
'black',
'bland',
'blank',
'blaring',
'bleak',
'blind',
'blond',
'blue',
'blushing',
'bogus',
'bold',
'bony',
'boring',
'bossy',
'both',
'bouncy',
'bowed',
'brave',
'brief',
'bright',
'brisk',
'broken',
'bronze',
'brown',
'bruised',
'bubbly',
'bulky',
'bumpy',
'buoyant',
'burly',
'busy',
'buttery',
'buzzing',
];

this.c = [
'calm',
'candid',
'canine',
'capital',
'carefree',
'careful',
'careless',
'caring',
'cheap',
'cheerful',
'cheery',
'chief',
'chilly',
'chubby',
'circular',
'classic',
'clean',
'clever',
'close',
'closed',
'cloudy',
'coarse',
'cold',
'common',
'cooked',
'cool',
'corny',
'corrupt',
'costly',
'crafty',
'crazy',
'cruel',
'crushing',
'cuddly',
'cultured'
];

this.d = [
'damp',
'dangerous',
'dapper',
'daring',
'dark',
'dead',
'deadly',
'dear',
'dearest',
'decent',
'decimal',
'decisive',
'deep',
'defensive',
'defiant',
'delayed',
'delirious',
'demanding',
'dense',
'dental',
'deserted',
'devoted',
'different',
'difficult',
'digital',
'dim',
'dimpled',
'direct',
'discrete',
'disloyal',
'dismal',
'distant',
'dreary',
'dirty',
'dismal',
'dizzy',
'dopey',
'doting',
'drab',
'drafty',
'dreary',
'droopy',
'dry',
'dual',
'dull'
];
this.e = [
'each',
'eager',
'earnest',
'early',
'easy',
'edible',
'elastic',
'elated',
'eminent',
'emotional',
'empty',
'enormous',
'enraged',
'entire',
'envious',
'equal',
'esteemed',
'ethical',
'euphoric',
'even',
'every',
'evil',
'excited',
'exciting',
'exotic',
'expensive',
'expert'
];

this.f = [
'fabulous',
'failing',
'faint',
'fair',
'faithful',
'fake',
'false',
'familiar',
'famous',
'fancy',
'far',
'faraway',
'fast',
'fat',
'fatal',
'fearless',
'feisty',
'feline',
'female',
'few',
'fickle',
'filthy',
'fine',
'firm',
'first',
'fitting',
'fixed',
'flaky',
'flashy',
'flat',
'flawed',
'flimsy',
'flippant',
'flowery',
'fluffy',
'fluid',
'focused',
'fond',
'foolish',
'forceful',
'forked',
'formal',
'fragrant',
'frail',
'frank',
'frayed',
'free',
'French',
'fresh',
'frigid',
'frilly',
'frizzy',
'front',
'frosty',
'frozen',
'frugal',
'fruitful',
'full',
'funny',
'fussy',
'fuzzy'
];

this.g = [
'gaseous',
'general',
'generous',
'gentle',
'genuine',
'giant',
'giddy',
'gifted',
'glaring',
'gloomy',
'glorious',
'glossy',
'glum',
'golden',
'good',
'gorgeous',
'graceful',
'gracious',
'grand',
'grave',
'gray',
'great',
'greedy',
'green',
'gregarious',
'grim',
'grimy',
'gross',
'growling',
'grown',
'grubby',
'gruesome'
];

this.h = [
'hairy',
'half',
'handmade',
'handsome',
'handy',
'happy',
'harmful',
'harmless',
'harsh',
'hasty',
'hateful',
'haunting',
'healthy',
'hearty',
'heavenly',
'heavy',
'hefty',
'helpful',
'helpless',
'hidden',
'hideous',
'hoarse',
'hollow',
'homely',
'honest',
'honored',
'hopeful',
'horrible',
'hot',
'huge',
'humble',
'humming',
'humongous',
'hungry',
'hurtful',
'husky'];

this.i = [
'icky',
'icy',
'ideal',
'idealistic',
'identical',
'idle',
'idiotic',
'idolized',
'ignorant',
'ill',
'impure',
'inferior',
'infinite',
'informal',
'innocent',
'insecure',
'intelligent',
'intent',
'intrepid',
'ironclad',
'irritating',
'itchy'
];

this.j = [
'jaded',
'jagged',
'jaunty',
'jealous',
'jittery',
'joint',
'jolly',
'jovial',
'joyful',
'joyous',
'juicy',
'jumbo',
'junior',
'jumpy',
'juvenile'
];

this.k = [
'keen',
'key',
'kind',
'knobby',
'knotty',
'knowing',
'known',
'kooky',
'kosher'
];

this.l = [
'lame',
'lanky',
'large',
'last',
'lasting',
'late',
'lavish',
'lawful',
'lazy',
'leading',
'lean',
'leafy',
'left',
'legal',
'likable',
'likely',
'limited',
'limp',
'limping',
'linear',
'lined',
'liquid',
'little',
'live',
'lively',
'livid',
'lone',
'lonely',
'loose',
'lost',
'loud',
'lovable',
'lovely',
'loving',
'low',
'loyal',
'lucky'
];

this.m = [
'mad',
'major',
'male',
'mammoth',
'married',
'marvelous',
'massive',
'mature',
'meager',
'mealy',
'mean',
'measly',
'meaty',
'medical',
'mediocre',
'medium',
'meek',
'mellow',
'merry',
'messy',
'metallic',
'mild',
'misty',
'mixed',
'modern',
'modest',
'moist',
'moral',
'muddy',
'muffled',
'mundane',
'murky',
'mushy',
'musty',
'muted',
'mysterious'
];

this.n = [
'naive',
'narrow',
'nasty',
'natural',
'naughty',
'nautical',
'near',
'neat',
'needy',
'negative',
'nervous',
'new',
'next',
'nice',
'nifty',
'nimble',
'nippy',
'noisy',
'nonstop',
'normal',
'notable',
'noted',
'novel',
'noxious',
'numb'
];

this.o = [
'obedient',
'obese',
'oblong',
'oily',
'oblong',
'obvious',
'odd',
'oddball',
'offbeat',
'offensive',
'official',
'only',
'open',
'optimal',
'optimistic',
'opulent',
'orange',
'orderly',
'organic',
'ornate',
'ornery',
'ordinary',
'original',
'other',
'our',
'oval'
];

this.p = [
'palatable',
'pale',
'paltry',
'parallel',
'parched',
'partial',
'passionate',
'past',
'pastel',
'peaceful',
'peppery',
'perfect',
'perfumed',
'periodic',
'perky',
'personal',
'pertinent',
'pesky',
'petty',
'phony',
'physical',
'piercing',
'pink',
'pitiful',
'plain',
'plaintive',
'plastic',
'playful',
'pleasant',
'pleased',
'pleasing',
'plump',
'plush',
'polished',
'polite',
'political',
'pointed',
'pointless',
'poised',
'poor',
'popular',
'portly',
'posh',
'positive',
'possible',
'potable',
'powerful',
'powerless',
'practical',
'precious',
'present',
'pretty',
'precious',
'previous',
'pricey',
'prickly',
'primary',
'prime',
'pristine',
'private',
'prize',
'probable',
'productive',
'profitable',
'profuse',
'proper',
'proud',
'prudent',
'punctual',
'pungent',
'puny',
'pure',
'purple',
'pushy',
'putrid',
'puzzled',
'puzzling'
];

this.q = [
'quaint',
'qualified',
'quarterly',
'queasy',
'querulous',
'quick',
'quiet',
'quirky',
'quixotic',
'quizzical'
];

this.r = [
'radiant',
'ragged',
'rapid',
'rare',
'rash',
'raw',
'recent',
'reckless',
'ready',
'real',
'regal',
'rich',
'rigid',
'right',
'ringed',
'ripe',
'roasted',
'robust',
'rosy',
'rotating',
'rotten',
'rough',
'round',
'rowdy',
'royal',
'rubbery',
'rundown',
'ruddy',
'rude',
'runny',
'rural',
'rusty'
];

this.s = [
'sad',
'safe',
'salty',
'same',
'sandy',
'sane',
'scaly',
'scarce',
'scared',
'scary',
'scented',
'scholarly',
'scientific',
'scornful',
'scratchy',
'scrawny',
'second',
'separate',
'serene',
'serious',
'serpentine',
'several',
'severe',
'shabby',
'shadowy',
'shady',
'shallow',
'shameful',
'shameless',
'sharp',
'shimmering',
'shiny',
'shocked',
'shocking',
'shoddy',
'showy',
'shrill',
'shy',
'sick',
'silent',
'silky',
'silly',
'silver',
'similar',
'simple',
'simplistic',
'sinful',
'single',
'sizzling',
'skeletal',
'skinny',
'sleepy',
'slight',
'slim',
'slimy',
'slippery',
'slow',
'slushy',
'small',
'smart',
'smoggy',
'smooth',
'smug',
'snappy',
'snarling',
'sneaky',
'sniveling',
'snoopy',
'sociable',
'soft',
'soggy',
'solid',
'somber',
'some',
'sore',
'sorrowful',
'soulful',
'soupy',
'sour',
'speedy',
'spicy',
'spiffy',
'spirited',
'spiteful',
'splendid',
'spotless',
'spotted',
'spry',
'square',
'squeaky',
'squiggly',
'stable',
'staid',
'stained',
'stale',
'standard',
'starchy',
'stark',
'starry',
'steep',
'sticky',
'stiff',
'stimulating',
'stingy',
'stormy',
'straight',
'strange',
'steel',
'strict',
'strident',
'striking',
'striped',
'strong',
'studious',
'stunning',
'stupendous',
'stupid',
'sturdy',
'stylish',
'subdued',
'submissive',
'substantial',
'subtle',
'suburban',
'sudden',
'sugary',
'sunny',
'super',
'superb',
'superficial',
'superior',
'supportive',
'surprised',
'suspicious',
'svelte',
'sweaty',
'sweet',
'sweltering',
'swift',
'sympathetic'
];

this.t = [
'tall',
'talkative',
'tame',
'tan',
'tangible',
'tart',
'tasty',
'tattered',
'taut',
'tedious',
'teeming',
'tempting',
'tender',
'tense',
'tepid',
'terrible',
'terrific',
'testy',
'thankful',
'that',
'these',
'thick',
'thin',
'third',
'thirsty',
'thorny',
'tidy',
'tight',
'timely',
'tinted',
'tiny',
'tired',
'torn',
'total',
'tough',
'trusty',
'truthful',
'tubby',
'turbulent',
'twin'
];

this.u = [
'ugly',
'ultimate',
'unaware',
'uncommon',
'unconscious',
'unequaled',
'uneven',
'unfinished',
'unfit',
'unfolded',
'unfortunate',
'unhappy',
'unhealthy',
'uniform',
'unimportant',
'unique',
'united',
'unknown',
'unlawful',
'unlined',
'unlucky',
'unpleasant',
'unrealistic',
'unripe',
'unruly',
'unselfish',
'unsightly',
'unsteady',
'unsung',
'untidy',
'untimely',
'untried',
'untrue',
'unused',
'unusual',
'upbeat',
'upright',
'upset',
'urban',
'usable',
'used',
'useful',
'useless',
'utter'
];

this.v = [
'vacant',
'vague',
'vain',
'valid',
'valuable',
'vapid',
'variable',
'vast',
'vibrant',
'vicious',
'vigilant',
'vigorous',
'violet',
'violent',
'virtual',
'virtuous',
'visible',
'vital',
'vivacious',
'vivid',
'voluminous'
];

this.w = [
'wan',
'warlike',
'warm',
'warped',
'wary',
'wasteful',
'watchful',
'watery',
'wavy',
'wealthy',
'weak',
'weary',
'webbed',
'wee',
'weekly',
'weepy',
'weighty',
'weird',
'welcome',
'wet',
'which',
'white',
'whole',
'whopping',
'wicked',
'wide',
'wiggly',
'wild',
'willing',
'wilted',
'winding',
'windy',
'winged',
'wiry',
'wise',
'witty',
'wobbly',
'woeful',
'wooden',
'woozy',
'wordy',
'worldly',
'worn',
'worried',
'worrisome',
'worse',
'worst',
'worthless',
'worthwhile',
'worthy',
'wrathful',
'wretched',
'writhing',
'wrong',
'wry'
];

this.y = [
'yawning',
'yearly',
'yellow',
'yellowish',
'young',
'youthful',
'yummy'
];

this.z = [
'zany',
'zealous',
'zesty',
'zigzag'
];